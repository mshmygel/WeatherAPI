services:
  db:
    image: postgres:15
    container_name: weather_db
    restart: always
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: weather_redis
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: weather_web
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn weather_dashboard.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/staticfiles

  celery_worker:
    build: .
    container_name: weather_celery_worker
    command: poetry run celery -A weather_dashboard worker --loglevel=info
    depends_on:
      - redis
      - db

  nginx:
    image: nginx:alpine
    container_name: weather_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume: